[tool.poetry]
name = "flask-mod-auth-gssapi"
version = "1.0.0"
description = "A Flask extention to make use of the authentication provided by the mod_auth_gssapi extention of Apache's HTTPd."

license = "MIT"

authors = [
  "Fedora Infrastructure <admin@fedoraproject.org>"
]

readme = "README.md"
keywords = ["security", "web"]
repository = "https://github.com/fedora-infra/flask-mod-auth-gssapi"
homepage = "https://github.com/fedora-infra/flask-mod-auth-gssapi"

include = [
    "tox.ini",
    "config/*",
    "docs/*/*",
    "tests/*",
]

classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = "^3.8.0"
flask = "<3.0.1"
gssapi = "^1.6.2"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-mock = "*"
pytest-cov = "*"
black = "*"
coverage = {extras = ["toml"], version = "*"}
ruff = "*"

[tool.ruff]
select = ["E", "F", "W", "I", "UP", "S", "B", "RUF"]
line-length = 100
target-version = "py38"
# ignore = ["RUF010", "UP038"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["flask_mod_auth_gssapi"]

[tool.coverage.paths]
source = ["flask_mod_auth_gssapi"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
]
omit = [
    "flask_mod_auth_gssapi/__init__.py"
]


[build-system]
requires = ["poetry>=1.1.4"]
build-backend = "poetry.masonry.api"
